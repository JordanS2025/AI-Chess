{"ast":null,"code":"// Base URL for API\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Get AI move\nexport const getAIMove = async fen => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/get-move`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        fen\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error getting AI move:', error);\n    throw error;\n  }\n};\n\n// Save game data\nexport const saveGame = async (pgn, result) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/save-game`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        pgn,\n        result\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error saving game:', error);\n    throw error;\n  }\n};\n\n// Check if the API is available\nexport const checkAPIStatus = async () => {\n  try {\n    const response = await fetch(API_BASE_URL);\n    return response.ok;\n  } catch (error) {\n    return false;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getAIMove","fen","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","error","console","saveGame","pgn","result","checkAPIStatus"],"sources":["/Users/bignola/Desktop/School/Capstone/AI-Chess-main/chess-ai-frontend/src/services/apiService.js"],"sourcesContent":["// Base URL for API\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Get AI move\nexport const getAIMove = async (fen) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/get-move`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ fen }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error getting AI move:', error);\n    throw error;\n  }\n};\n\n// Save game data\nexport const saveGame = async (pgn, result) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/save-game`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ pgn, result }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error saving game:', error);\n    throw error;\n  }\n};\n\n// Check if the API is available\nexport const checkAPIStatus = async () => {\n  try {\n    const response = await fetch(API_BASE_URL);\n    return response.ok;\n  } catch (error) {\n    return false;\n  }\n};"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,uBAAuB;;AAE5C;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,GAAG,IAAK;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,EAAE;MACvDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAI,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IAC3D;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,KAAK;EAC7C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,YAAY,EAAE;MACxDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEQ,GAAG;QAAEC;MAAO,CAAC;IACtC,CAAC,CAAC;IAEF,IAAI,CAACf,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IAC3D;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACJ,YAAY,CAAC;IAC1C,OAAOG,QAAQ,CAACO,EAAE;EACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}