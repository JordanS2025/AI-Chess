{"ast":null,"code":"var _jsxFileName = \"/Users/bignola/Desktop/School/Capstone/AI-Chess-main/chess-ai-frontend/src/components/ChessBoard/ChessBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport Chessboard from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessGame = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const gameRef = useRef(game);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [isAIThinking, setIsAIThinking] = useState(false);\n  useEffect(() => {\n    gameRef.current = game;\n  }, [game]);\n  function promptPromotion(sourceSquare, targetSquare, callback) {\n    const promotionPiece = window.prompt(\"Promote to (q, r, b, n)?\", \"q\"); // Default queen\n    if (![\"q\", \"r\", \"b\", \"n\"].includes(promotionPiece)) {\n      alert(\"Invalid selection. Defaulting to Queen.\");\n      callback(sourceSquare, targetSquare, \"q\");\n    } else {\n      callback(sourceSquare, targetSquare, promotionPiece);\n    }\n  }\n  function makePlayerMove(sourceSquare, targetSquare) {\n    console.log(\"Attempting player move from\", sourceSquare, \"to\", targetSquare);\n    const gameCopy = new Chess(gameRef.current.fen());\n    const legalMoves = gameCopy.moves({\n      square: sourceSquare,\n      verbose: true\n    });\n    const legalMove = legalMoves.find(move => move.to === targetSquare);\n    if (!legalMove) {\n      console.error(`${targetSquare} is not a legal target from ${sourceSquare}`);\n      return false;\n    }\n    if (legalMove.flags.includes(\"p\")) {\n      // Pawn promotion move\n      promptPromotion(sourceSquare, targetSquare, (src, tgt, promotionPiece) => {\n        applyMove(src, tgt, promotionPiece);\n      });\n    } else {\n      return applyMove(sourceSquare, targetSquare, undefined);\n    }\n  }\n  function applyMove(sourceSquare, targetSquare, promotion) {\n    try {\n      const gameCopy = new Chess(gameRef.current.fen());\n      const moveObj = {\n        from: sourceSquare,\n        to: targetSquare\n      };\n      if (promotion) moveObj.promotion = promotion;\n      console.log(\"Move being applied:\", moveObj);\n      const result = gameCopy.move(moveObj);\n      if (!result) {\n        console.error(\"Failed to apply legal move:\", moveObj);\n        return false;\n      }\n      console.log(\"Player move successfully applied:\", result);\n      setGame(gameCopy);\n      gameRef.current = gameCopy;\n      setMoveHistory(prev => [...prev, result.san]);\n      if (gameCopy.isGameOver()) {\n        handleGameOver(gameCopy);\n        return true;\n      }\n      setTimeout(makeAIMove, 300);\n      return true;\n    } catch (error) {\n      console.error(\"Error making player move:\", error);\n      return false;\n    }\n  }\n  const makeAIMove = useCallback(async () => {\n    if (isAIThinking) return;\n    setIsAIThinking(true);\n    try {\n      const currentFEN = gameRef.current.fen();\n      const response = await fetch('http://localhost:8000/chess/get-move', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fen: currentFEN\n        })\n      });\n      if (!response.ok) throw new Error(`Server responded with ${response.status}`);\n      const data = await response.json();\n      if (!data.move || !data.move.from || !data.move.to) throw new Error(\"Invalid AI move\");\n      const gameCopy = new Chess(currentFEN);\n      const moveObj = {\n        from: data.move.from,\n        to: data.move.to,\n        promotion: data.move.promotion || \"q\" // Ensure AI promotes to a valid piece\n      };\n      const result = gameCopy.move(moveObj);\n      if (!result) throw new Error(\"Failed to apply AI move\");\n      setGame(gameCopy);\n      gameRef.current = gameCopy;\n      setMoveHistory(prev => [...prev, result.san]);\n      if (gameCopy.isGameOver()) handleGameOver(gameCopy);\n    } catch (error) {\n      console.error(\"AI move error:\", error);\n    } finally {\n      setIsAIThinking(false);\n    }\n  }, [isAIThinking]);\n  function handleGameOver(game) {\n    if (game.isCheckmate()) {\n      alert(\"Checkmate! Game over.\");\n    } else if (game.isDraw()) {\n      alert(\"It's a draw!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: (sourceSquare, targetSquare) => makePlayerMove(sourceSquare, targetSquare)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Move History:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: move\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessGame, \"raBDHj9iljshtymPxr6edcMRMv0=\");\n_c = ChessGame;\nexport default ChessGame;\nvar _c;\n$RefreshReg$(_c, \"ChessGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Chessboard","Chess","jsxDEV","_jsxDEV","ChessGame","_s","game","setGame","gameRef","moveHistory","setMoveHistory","isAIThinking","setIsAIThinking","current","promptPromotion","sourceSquare","targetSquare","callback","promotionPiece","window","prompt","includes","alert","makePlayerMove","console","log","gameCopy","fen","legalMoves","moves","square","verbose","legalMove","find","move","to","error","flags","src","tgt","applyMove","undefined","promotion","moveObj","from","result","prev","san","isGameOver","handleGameOver","setTimeout","makeAIMove","currentFEN","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","isCheckmate","isDraw","children","fileName","_jsxFileName","lineNumber","columnNumber","position","onPieceDrop","map","index","_c","$RefreshReg$"],"sources":["/Users/bignola/Desktop/School/Capstone/AI-Chess-main/chess-ai-frontend/src/components/ChessBoard/ChessBoard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport Chessboard from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\n\nconst ChessGame = () => {\n  const [game, setGame] = useState(new Chess());\n  const gameRef = useRef(game);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [isAIThinking, setIsAIThinking] = useState(false);\n\n  useEffect(() => {\n    gameRef.current = game;\n  }, [game]);\n\n  function promptPromotion(sourceSquare, targetSquare, callback) {\n    const promotionPiece = window.prompt(\"Promote to (q, r, b, n)?\", \"q\"); // Default queen\n    if (![\"q\", \"r\", \"b\", \"n\"].includes(promotionPiece)) {\n      alert(\"Invalid selection. Defaulting to Queen.\");\n      callback(sourceSquare, targetSquare, \"q\");\n    } else {\n      callback(sourceSquare, targetSquare, promotionPiece);\n    }\n  }\n\n  function makePlayerMove(sourceSquare, targetSquare) {\n    console.log(\"Attempting player move from\", sourceSquare, \"to\", targetSquare);\n\n    const gameCopy = new Chess(gameRef.current.fen());\n    const legalMoves = gameCopy.moves({ square: sourceSquare, verbose: true });\n\n    const legalMove = legalMoves.find(move => move.to === targetSquare);\n    if (!legalMove) {\n      console.error(`${targetSquare} is not a legal target from ${sourceSquare}`);\n      return false;\n    }\n\n    if (legalMove.flags.includes(\"p\")) { // Pawn promotion move\n      promptPromotion(sourceSquare, targetSquare, (src, tgt, promotionPiece) => {\n        applyMove(src, tgt, promotionPiece);\n      });\n    } else {\n      return applyMove(sourceSquare, targetSquare, undefined);\n    }\n  }\n\n  function applyMove(sourceSquare, targetSquare, promotion) {\n    try {\n      const gameCopy = new Chess(gameRef.current.fen());\n      const moveObj = { from: sourceSquare, to: targetSquare };\n      if (promotion) moveObj.promotion = promotion;\n\n      console.log(\"Move being applied:\", moveObj);\n      const result = gameCopy.move(moveObj);\n\n      if (!result) {\n        console.error(\"Failed to apply legal move:\", moveObj);\n        return false;\n      }\n\n      console.log(\"Player move successfully applied:\", result);\n      setGame(gameCopy);\n      gameRef.current = gameCopy;\n      setMoveHistory(prev => [...prev, result.san]);\n\n      if (gameCopy.isGameOver()) {\n        handleGameOver(gameCopy);\n        return true;\n      }\n\n      setTimeout(makeAIMove, 300);\n      return true;\n    } catch (error) {\n      console.error(\"Error making player move:\", error);\n      return false;\n    }\n  }\n\n  const makeAIMove = useCallback(async () => {\n    if (isAIThinking) return;\n    setIsAIThinking(true);\n\n    try {\n      const currentFEN = gameRef.current.fen();\n      const response = await fetch('http://localhost:8000/chess/get-move', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ fen: currentFEN }),\n      });\n\n      if (!response.ok) throw new Error(`Server responded with ${response.status}`);\n\n      const data = await response.json();\n      if (!data.move || !data.move.from || !data.move.to) throw new Error(\"Invalid AI move\");\n\n      const gameCopy = new Chess(currentFEN);\n      const moveObj = {\n        from: data.move.from,\n        to: data.move.to,\n        promotion: data.move.promotion || \"q\" // Ensure AI promotes to a valid piece\n      };\n\n      const result = gameCopy.move(moveObj);\n      if (!result) throw new Error(\"Failed to apply AI move\");\n\n      setGame(gameCopy);\n      gameRef.current = gameCopy;\n      setMoveHistory(prev => [...prev, result.san]);\n\n      if (gameCopy.isGameOver()) handleGameOver(gameCopy);\n    } catch (error) {\n      console.error(\"AI move error:\", error);\n    } finally {\n      setIsAIThinking(false);\n    }\n  }, [isAIThinking]);\n\n  function handleGameOver(game) {\n    if (game.isCheckmate()) {\n      alert(\"Checkmate! Game over.\");\n    } else if (game.isDraw()) {\n      alert(\"It's a draw!\");\n    }\n  }\n\n  return (\n    <div>\n      <h1>Chess Game</h1>\n      <Chessboard\n        position={game.fen()}\n        onPieceDrop={(sourceSquare, targetSquare) => makePlayerMove(sourceSquare, targetSquare)}\n      />\n      <h3>Move History:</h3>\n      <ul>\n        {moveHistory.map((move, index) => (\n          <li key={index}>{move}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ChessGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}